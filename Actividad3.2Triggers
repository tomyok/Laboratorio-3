-- 1.Hacer un trigger que no permita la inscripción de un usuario a un curso si el usuario: Registra deuda o Es el instructor del curso
--En caso de falla mostrar un mensaje aclaratorio pertinente. Sino insertar la inscripción teniendo en cuenta que el costo de la misma debe ser el costo actual del curso en cuestión.
Create Or Alter Trigger TR_UsuarioNuevoDeuda ON Inscripciones
After Insert
As Begin
	
	Begin Try
	Begin Transaction

	Declare @IDUsuario BigInt
	Declare @IDCurso BigInt
	Declare @Fecha Date
	Declare @Costo Money
	Declare @IDInscripcion BigInt
	Declare @Pago Money
	Declare @EsInstructor Int

	Select @IDUsuario = IDUsuario,
		   @IDCurso = IDCurso,
		   @Fecha = Fecha,
		   @Costo = Costo,
		   @IDInscripcion = ID From inserted

	Select @Pago = importe From Pagos Where IDInscripcion = @IDInscripcion

	If @Pago < @Costo Begin
	Raiserror('El Usuario presenta deuda vigente.',16,0)
	End

	Select @EsInstructor = Count(*) From Instructores_x_Curso Where IDCurso = @IDCurso And IDUsuario = @IDUsuario

	If @EsInstructor >= 1 Begin
	Raiserror('El Usuario es instructor.',16,0)
	End

	Commit Transaction
	End Try
	Begin Catch
		Print Error_Message()
		Rollback Transaction
	End Catch
End
-- 2.Hacer un trigger que no permita que se ingrese un nuevo curso cuyo costo de certificación sea un valor mayor a 10 veces más que el costo de certificación más caro. En caso de falla mostrar un mensaje aclaratorio de lo contrario registrar el curso.
Create Or Alter Trigger TR_CursoNuevo On Cursos
Instead Of Insert
As Begin

	Begin Try
	Begin Transaction

	Declare	@CostoCertificacion Money
	Declare @CostoCertificacionMasCaro Money
	Declare @CostoCertificacionMasCarox10 Money

	Select @CostoCertificacion = CostoCertificacion From Inserted

	Select @CostoCertificacionMasCaro = Max(CostoCertificacion) From Cursos

	Set @CostoCertificacionMasCarox10 = @CostoCertificacionMasCaro * 10

	if @CostoCertificacion > @CostoCertificacionMasCarox10 Begin
	Raiserror('El curso no puede tener un costo de certificacion tan caro.',16,0)
	End

	Commit Transaction
	Print 'Joya el insert a cursos.'
	End Try
	Begin Catch
		Print Error_Message()
		Rollback Transaction
	End Catch
End

INSERT INTO cursos (IDNivel, Nombre, CostoCurso, CostoCertificacion, Estreno, DebeSerMayorDeEdad)
VALUES (3, 'Curso de SQL Avanzado', 200.00, 360000.00, '2024-08-01', 1);

Delete from Cursos Where ID= 25
